name: Project Board Automation

on:
  issues:
    types: [opened, closed, reopened, assigned]
  pull_request:
    types: [opened, closed, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]

permissions:
  issues: write
  pull-requests: write
  repository-projects: write
  contents: read

jobs:
  automate-project-columns:
    runs-on: ubuntu-latest
    steps:
      - name: Move new issues to Todo
        if: github.event_name == 'issues' && github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            const projectId = "PVT_kwDOPlP3P84B2QH7"; // SuperPassword Development

            await github.rest.projects.createCard({
              column_id: "To Do",
              content_id: context.payload.issue.id,
              content_type: "Issue"
            });

      - name: Move assigned issues to In Progress
        if: github.event_name == 'issues' && github.event.action == 'assigned'
        uses: actions/github-script@v7
        with:
          script: |
            const card = await github.rest.projects.listCards({
              column_id: "To Do"
            }).then(res => res.data.find(card => card.content_url.includes(context.payload.issue.number)));

            if (card) {
              await github.rest.projects.moveCard({
                card_id: card.id,
                position: "bottom",
                column_id: "In Progress"
              });
            }

      - name: Move PRs ready for review
        if: github.event_name == 'pull_request' && github.event.action == 'ready_for_review'
        uses: actions/github-script@v7
        with:
          script: |
            const card = await github.rest.projects.listCards({
              column_id: "In Progress"
            }).then(res => res.data.find(card => card.content_url.includes(context.payload.pull_request.number)));

            if (card) {
              await github.rest.projects.moveCard({
                card_id: card.id,
                position: "bottom",
                column_id: "Review"
              });
            }

      - name: Move closed issues to Done
        if: github.event_name == 'issues' && github.event.action == 'closed'
        uses: actions/github-script@v7
        with:
          script: |
            const columns = ['To Do', 'In Progress', 'Review'];
            for (const columnId of columns) {
              const card = await github.rest.projects.listCards({
                column_id: columnId
              }).then(res => res.data.find(card => card.content_url.includes(context.payload.issue.number)));
              
              if (card) {
                await github.rest.projects.moveCard({
                  card_id: card.id,
                  position: "bottom",
                  column_id: "Done"
                });
                break;
              }
            }

      - name: Move merged PRs to Done
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
        uses: actions/github-script@v7
        with:
          script: |
            const columns = ['To Do', 'In Progress', 'Review'];
            for (const columnId of columns) {
              const card = await github.rest.projects.listCards({
                column_id: columnId
              }).then(res => res.data.find(card => card.content_url.includes(context.payload.pull_request.number)));
              
              if (card) {
                await github.rest.projects.moveCard({
                  card_id: card.id,
                  position: "bottom",
                  column_id: "Done"
                });
                break;
              }
            }

      - name: Update linked issues when PR merged
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
        uses: actions/github-script@v7
        with:
          script: |
            // Extract issue numbers from PR body using "Fixes #X" or "Closes #X"
            const issueRefs = context.payload.pull_request.body.match(/(fixes|closes)\s*#(\d+)/gi);
            if (!issueRefs) return;

            for (const ref of issueRefs) {
              const issueNumber = ref.match(/\d+/)[0];
              
              // Move the issue card to Done
              const columns = ['To Do', 'In Progress', 'Review'];
              for (const columnId of columns) {
                const card = await github.rest.projects.listCards({
                  column_id: columnId
                }).then(res => res.data.find(card => card.content_url.includes(issueNumber)));
                
                if (card) {
                  await github.rest.projects.moveCard({
                    card_id: card.id,
                    position: "bottom",
                    column_id: "Done"
                  });
                  break;
                }
              }
            }
