---
name: 🔄 PR Management

on:
  push:
    branches-ignore:
      - main
      - develop
  schedule:
    - cron: "*/10 * * * *"  # Check every 10 minutes
  workflow_dispatch:

jobs:
  manage-prs:
    name: 🎯 Manage PRs
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for branches without PRs
        id: check-branches
        run: |
          for branch in $(git branch -r | grep -vE "main$|develop$|HEAD" | sed "s/origin\///"); do
            pr_exists=$(gh pr list --head $branch --json number --jq length)
            if [ "$pr_exists" -eq "0" ]; then
              echo "Creating PR for $branch"
              commit_msg=$(git log -1 --pretty=%B origin/$branch)
              gh pr create \
                --base develop \
                --head $branch \
                --title "$commit_msg" \
                --body "Automated PR creation for branch $branch

## Changes
$(git log develop..origin/$branch --pretty=format:"- %s")"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up old PRs
        run: |
          # Close stale PRs
          gh pr list --json number,updatedAt \
            --jq ".[] | select((.updatedAt | fromdate) < now - 30*24*60*60)" | \
          while read -r pr; do
            number=$(echo $pr | jq -r .number)
            gh pr close $number -c "Closing stale PR automatically"
          done

          # Delete merged branches
          git fetch --prune
          for branch in $(git branch -r --merged origin/develop | grep -vE "main$|develop$|HEAD"); do
            git push origin --delete ${branch#origin/}
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  consolidate-prs:
    name: 🎯 Consolidate PRs
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Find similar PRs
        run: |
          prs=$(gh pr list --json number,title,headRefName --jq "."

          for type in $(echo "$prs" | jq -r ".[] | .title" | \
            grep -E "^(feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert):" | \
            cut -d: -f1 | sort -u); do

            similar_prs=$(echo "$prs" | jq -r ".[] | select(.title | startswith(\"$type:\"))")

            if [ "$(echo "$similar_prs" | jq length)" -gt 1 ]; then
              echo "Found multiple $type PRs:"
              echo "$similar_prs" | jq -r ".number"

              while read -r number; do
                gh pr comment "$number" \
                  --body "Multiple PRs of type '$type' exist. Consider consolidating them."
              done <<< "$(echo "$similar_prs" | jq -r ".number")"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  status-check:
    name: 📊 PR Status Check
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check PR statuses
        run: |
          gh pr list --json number,title,reviewDecision,checksStatus \
            --jq ".[] | select(.reviewDecision == \"REVIEW_REQUIRED\" or .checksStatus == \"PENDING\")" | \
          while read -r pr; do
            number=$(echo "$pr" | jq -r .number)
            review=$(echo "$pr" | jq -r .reviewDecision)
            checks=$(echo "$pr" | jq -r .checksStatus)

            gh pr comment "$number" --body "⚠️ PR Status Update:
            - Review Status: $review
            - Checks Status: $checks

            Please address any pending items to move this PR forward."
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
