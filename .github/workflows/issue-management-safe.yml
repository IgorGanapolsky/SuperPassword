name: Safe Issue Management

on:
  issues:
    types: [opened]  # Only on new issues, not edits
  schedule:
    - cron: "0 0 * * 1"  # Weekly on Monday, not hourly!
  workflow_dispatch:

# Prevent concurrent runs
concurrency:
  group: issue-mgmt
  cancel-in-progress: false

permissions:
  issues: write
  contents: read

jobs:
  triage-new-issue:
    name: Triage New Issue
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # CRITICAL: Skip if triggered by bot to prevent loops
    if: github.event_name == 'issues' && github.actor != 'github-actions[bot]'
    steps:
      - name: Add triage label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Only add label if it doesn't exist
            const labels = context.payload.issue.labels.map(l => l.name);
            if (!labels.includes('status: triage')) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: ['status: triage']
              });
            }

  weekly-cleanup:
    name: Weekly Issue Cleanup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Check stale issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 30  // Limit to 30 issues to prevent timeouts
            });
            
            const now = new Date();
            let processed = 0;
            
            for (const issue of issues) {
              if (issue.pull_request) continue;
              if (processed >= 10) break;  // Process max 10 issues per run
              
              const daysOld = (now - new Date(issue.created_at)) / (1000 * 60 * 60 * 24);
              const labels = issue.labels.map(l => l.name);
              
              // Only mark as stale after 30 days
              if (daysOld > 30 && !labels.includes('stale')) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: ['stale']
                });
                processed++;
              }
            }
