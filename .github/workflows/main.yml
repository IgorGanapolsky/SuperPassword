name: üöÄ CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy to production"
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  checks: write
  security-events: write

jobs:
  validate:
    name: üîç Validate & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Lint & Format
        run: |
          npm run lint
          npm run fmt

      - name: Type Check
        run: npm run type-check

      - name: Run Tests
        run: npm test -- --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    name: üîí Security Checks
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run SAST
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Dependency Audit
        run: |
          npm audit || true  # Don't fail on audit
          npx license-checker --production --onlyAllow "MIT;ISC;Apache-2.0;BSD-2-Clause;BSD-3-Clause" || true

      - name: Run GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  compatibility:
    name: üîÑ Compatibility
    needs: [validate, security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js & Expo
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g expo-cli eas-cli

      - name: Check Dependencies
        run: npx npm-check-updates || true

      - name: Verify Expo Configuration
        run: |
          expo doctor || true
          expo install --check || true

  build:
    name: üì± Build Apps
    needs: compatibility
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js & Expo
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g eas-cli

      - name: Build Web
        run: |
          npx expo export:web

      - name: Run Lighthouse
        run: |
          npm install -g @lhci/cli
          lhci autorun || true

      - name: Build Mobile (if release)
        if: github.event_name == 'workflow_dispatch' && inputs.deploy
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas build --platform all --non-interactive --no-wait

  deploy:
    name: üöÄ Deploy
    needs: build
    if: github.event_name == 'workflow_dispatch' && inputs.deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Web
        run: |
          # Add web deployment steps
          echo "Deploying web version..."

      - name: Submit to Stores
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas submit -p ios --latest
          eas submit -p android --latest

  notify:
    name: üì£ Notify Team
    needs: [validate, security, build, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Status
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "deployments"
          slack-message: |
            *Build Status Update*
            - Validation: ${{ needs.validate.result }}
            - Security: ${{ needs.security.result }}
            - Build: ${{ needs.build.result }}
            - Deploy: ${{ needs.deploy.result || 'not run' }}

            ${{ github.event_name == 'pull_request' && format('PR: {0}', github.event.pull_request.html_url) || format('Commit: {0}', github.event.head_commit.url) }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
