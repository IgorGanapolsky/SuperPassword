name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: üîç Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run fmt

  security:
    name: üîí Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: Dependency audit
        run: npm audit

  sonarcloud:
    name: üî¨ SonarCloud
    runs-on: ubuntu-latest
    needs: [validate, security]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Test and coverage
        run: npm test -- --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=IgorGanapolsky_SuperPassword
            -Dsonar.organization=igorganapolsky
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  build:
    name: üèóÔ∏è Build
    needs: [validate, security, sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build web
        run: npx expo build:web

      - name: Build Android
        if: github.ref == 'refs/heads/main'
        run: eas build --platform android --profile preview --non-interactive

      - name: Build iOS
        if: github.ref == 'refs/heads/main'
        run: eas build --platform ios --profile preview --non-interactive

      - name: Upload web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: web-build

  deploy:
    name: üöÄ Deploy
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: web-build

      - name: Deploy web
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: web-build

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to stores
        run: |
          eas submit -p ios --latest
          eas submit -p android --latest

  notify:
    name: üì¢ Notify
    needs: [build, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify status
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "deployments"
          slack-message: |
            *${{ github.repository }}* deployment status:
            - Build: ${{ needs.build.result }}
            - Deploy: ${{ needs.deploy.result || 'skipped' }}
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}
            - Author: ${{ github.actor }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
