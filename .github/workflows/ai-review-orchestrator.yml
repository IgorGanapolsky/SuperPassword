name: AI Review Orchestrator

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  handle-coderabbit:
    name: Handle CodeRabbit feedback
    if: >-
      (github.event_name == 'pull_request_review_comment' && github.event.comment.user.login == 'coderabbitai[bot]') ||
      (github.event_name == 'issue_comment' && github.event.comment.user.login == 'coderabbitai[bot]') ||
      github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Check out PR head
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.ref || github.ref_name }}

      - name: Inspect comment and prepare safe fixes
        id: plan
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const core = require('@actions/core');
            const eventName = context.eventName;
            let needsYamlFix = false;
            let reason = '';

            if (eventName === 'pull_request_review_comment' || eventName === 'issue_comment') {
              const body = (context.payload.comment && context.payload.comment.body) || '';
              const path = context.payload.comment && context.payload.comment.path;
              if (path && path.endsWith('.github/workflows/main.yml')) {
                if (/permissions/i.test(body) || /least-privilege/i.test(body) || /issue_comment/.test(body)) {
                  needsYamlFix = true;
                  reason = 'Apply least-privilege permissions and tighter issue_comment gating.';
                }
              }
            } else if (eventName === 'pull_request_target') {
              // On PR events, we still enforce idempotent YAML hardening
              needsYamlFix = true;
              reason = 'Ensure YAML hardening present.';
            }

            core.setOutput('needsYamlFix', needsYamlFix);
            core.setOutput('reason', reason);

      - name: Apply YAML hardening (idempotent)
        if: steps.plan.outputs.needsYamlFix == 'true'
        run: |
          set -euo pipefail
          FILE=.github/workflows/main.yml
          # Ensure issue_comment gating includes 'github.event.issue != null'
          perl -0777 -pe "s/(issue_comment'\s*&&\s*github\.actor\s*!=\s*'github-actions\[bot\]')\)/\1 && github.event.issue != null)/g" -i "$FILE"
          # Ensure job-level permissions exist under project-sync
          if ! grep -A3 -n "^\s*permissions:\s*$" "$FILE" | grep -q "issues: write"; then
            awk '/^\s*env:\s*$/ && f==0 {print; print "      # inserted by AI Orchestrator"; print "      # (no-op if already present)"; f=1; next}1' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
          fi
          git add "$FILE"
          if ! git diff --cached --quiet; then
            git commit -m "ci(ai): apply CodeRabbit YAML hardening (permissions + gating)"
            git push
          else
            echo "No changes needed"
          fi

      - name: Acknowledge CodeRabbit comment
        if: github.event_name != 'pull_request_target'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.payload.pull_request ? context.payload.pull_request.number : context.payload.issue.number;
            const body = `ðŸ¤– Applied safe YAML hardening in response to CodeRabbit feedback.\n\nReason: ${core.getInput('reason') || 'Auto-harden'}`;
            await github.rest.issues.createComment({ owner, repo, issue_number, body });
