name: Agent Orchestration System

on:
  schedule:
    - cron: "*/15 * * * *" # Run every 15 minutes
  workflow_dispatch: # Allow manual triggering
  issues:
    types: [opened, edited, closed, reopened]
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  orchestrate:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: write
      projects: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize AI Agent
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Configure Agent Environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          pip install agentic-orchestrator==2.5.0
          python -m agentic.setup

      - name: Run Health Diagnostics
        id: diagnostics
        run: |
          python -m agentic.analyze \
            --repo="${{ github.repository }}" \
            --output-format=json > health_report.json

      - name: Process Metrics
        run: |
          python -m agentic.metrics \
            --input=health_report.json \
            --update-project

      - name: Update Project Board
        if: always()
        run: |
          python -m agentic.board \
            --mode=update \
            --health-data=health_report.json \
            --auto-assign \
            --risk-analysis

      - name: Generate AI Insights
        run: |
          python -m agentic.insights \
            --analyze-trends \
            --predict-risks \
            --suggest-optimizations

      - name: Archive Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: agent-insights
          path: |
            health_report.json
            insights/
            metrics/
